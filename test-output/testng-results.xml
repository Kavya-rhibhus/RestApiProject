<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="246" passed="245" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-23T15:33:53 IST" name="Default suite" finished-at="2024-05-23T15:34:42 IST" duration-ms="48436">
    <groups>
    </groups>
    <test started-at="2024-05-23T15:33:53 IST" name="Default test" finished-at="2024-05-23T15:34:42 IST" duration-ms="48436">
      <class name="com.MonacoTesting.MonacoTestClass">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:33:53 IST" name="setUp" finished-at="2024-05-23T15:33:53 IST" duration-ms="762" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:33:56 IST" name="beforeMethod" finished-at="2024-05-23T15:33:56 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:33:56 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:01 IST" duration-ms="4663" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:01 IST" name="afterMethod" finished-at="2024-05-23T15:34:02 IST" duration-ms="959" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:02 IST" name="beforeMethod" finished-at="2024-05-23T15:34:02 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:02 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:02 IST" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:02 IST" name="afterMethod" finished-at="2024-05-23T15:34:02 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:02 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:02 IST" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/raffle/read]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:02 IST" name="beforeMethod" finished-at="2024-05-23T15:34:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:02 IST" name="afterMethod" finished-at="2024-05-23T15:34:02 IST" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:02 IST" name="beforeMethod" finished-at="2024-05-23T15:34:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:02 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:02 IST" duration-ms="137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/raffle/read/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:02 IST" name="afterMethod" finished-at="2024-05-23T15:34:02 IST" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:02 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:03 IST" duration-ms="106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/raffle/fetch]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "raffle_id": "Raffle#687a3b91-a38b-404c-a49d-662104e98be4" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:02 IST" name="beforeMethod" finished-at="2024-05-23T15:34:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:03 IST" name="afterMethod" finished-at="2024-05-23T15:34:03 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:03 IST" name="beforeMethod" finished-at="2024-05-23T15:34:03 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:03 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:03 IST" duration-ms="135" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/raffle/fetch/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "raffle_id": "Raffle#687a3b91-a38b-404c-a49d-662104e98be4" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:03 IST" name="afterMethod" finished-at="2024-05-23T15:34:03 IST" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:03 IST" name="beforeMethod" finished-at="2024-05-23T15:34:03 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:03 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:03 IST" duration-ms="119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/read]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:03 IST" name="afterMethod" finished-at="2024-05-23T15:34:03 IST" duration-ms="95" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:03 IST" name="beforeMethod" finished-at="2024-05-23T15:34:03 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:03 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:03 IST" duration-ms="197" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/read/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:03 IST" name="afterMethod" finished-at="2024-05-23T15:34:03 IST" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:03 IST" name="beforeMethod" finished-at="2024-05-23T15:34:03 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:03 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:03 IST" duration-ms="117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/gallery]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "lastDate": 1712206355046 }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:03 IST" name="afterMethod" finished-at="2024-05-23T15:34:03 IST" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:03 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:04 IST" duration-ms="118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/gallery/WithLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "lastDate": " 1712206355046" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:03 IST" name="beforeMethod" finished-at="2024-05-23T15:34:03 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="afterMethod" finished-at="2024-05-23T15:34:04 IST" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="beforeMethod" finished-at="2024-05-23T15:34:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:04 IST" duration-ms="215" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/questions/fetch]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="afterMethod" finished-at="2024-05-23T15:34:04 IST" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="beforeMethod" finished-at="2024-05-23T15:34:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:04 IST" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/questions/fetch/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="afterMethod" finished-at="2024-05-23T15:34:04 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="beforeMethod" finished-at="2024-05-23T15:34:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:04 IST" duration-ms="139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/payment/success]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="afterMethod" finished-at="2024-05-23T15:34:04 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="beforeMethod" finished-at="2024-05-23T15:34:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:04 IST" duration-ms="110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "Monaco watch colors", "item": { "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 30 }, "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="afterMethod" finished-at="2024-05-23T15:34:04 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="beforeMethod" finished-at="2024-05-23T15:34:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:04 IST" duration-ms="96" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/fetch/user]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="afterMethod" finished-at="2024-05-23T15:34:04 IST" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="beforeMethod" finished-at="2024-05-23T15:34:04 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:04 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:05 IST" duration-ms="142" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/payment]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "userId": "User#1dfbc65f-3bf9-419b-8dc1-d65394633bd0", "cartId": "Cart#24d15e1d-24c8-4fb7-84bb-5b3031bb6dd2", "paymentType": "wallet" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="afterMethod" finished-at="2024-05-23T15:34:05 IST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="beforeMethod" finished-at="2024-05-23T15:34:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:05 IST" duration-ms="123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/update]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "M watch colors", "item": { "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 2 }, "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="afterMethod" finished-at="2024-05-23T15:34:05 IST" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="beforeMethod" finished-at="2024-05-23T15:34:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:05 IST" duration-ms="168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/payment/success/getTickets]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "transactionId": "MWC-738804590387" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="afterMethod" finished-at="2024-05-23T15:34:05 IST" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="beforeMethod" finished-at="2024-05-23T15:34:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:05 IST" duration-ms="86" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/guest/checkout]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "test2323@gmail.com", "firstName": "test", "lastName": "12", "contact_number": "+441231231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Monaco watch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="afterMethod" finished-at="2024-05-23T15:34:05 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="beforeMethod" finished-at="2024-05-23T15:34:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:05 IST" duration-ms="86" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/verify/otp]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "otp": 750990 }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="afterMethod" finished-at="2024-05-23T15:34:05 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="beforeMethod" finished-at="2024-05-23T15:34:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:05 IST" duration-ms="103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/generate/otp]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="afterMethod" finished-at="2024-05-23T15:34:05 IST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="beforeMethod" finished-at="2024-05-23T15:34:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:05 IST" duration-ms="99" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 23]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/verify/otp]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "otp": 341617 }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="afterMethod" finished-at="2024-05-23T15:34:05 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="beforeMethod" finished-at="2024-05-23T15:34:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:05 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:06 IST" duration-ms="98" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/password/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "currentPassword": "aathavan1234", "newPassword": "{{randomPassword}}", "confirmNewPassword": "{{randomPassword}}", "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="afterMethod" finished-at="2024-05-23T15:34:06 IST" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="beforeMethod" finished-at="2024-05-23T15:34:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:06 IST" duration-ms="96" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 25]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/changeOldPassword]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "newPassword" : "{{randomPassword}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="afterMethod" finished-at="2024-05-23T15:34:06 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="beforeMethod" finished-at="2024-05-23T15:34:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:06 IST" duration-ms="82" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 26]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/delete/expires]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "sort_id":"Cart#66927c5e-6546-49ee-b07c-df27cc694680" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="afterMethod" finished-at="2024-05-23T15:34:06 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:06 IST" duration-ms="118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 27]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add/items]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "test2323@gmail.com", "firstName": "test", "lastName": "12", "contact_number": "+441231231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Monaco watch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="beforeMethod" finished-at="2024-05-23T15:34:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="afterMethod" finished-at="2024-05-23T15:34:06 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:06 IST" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 28]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/payment/status/login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "otp": 750990 }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="beforeMethod" finished-at="2024-05-23T15:34:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="afterMethod" finished-at="2024-05-23T15:34:06 IST" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="beforeMethod" finished-at="2024-05-23T15:34:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:06 IST" duration-ms="91" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 29]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cartPayment/add]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="afterMethod" finished-at="2024-05-23T15:34:06 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="beforeMethod" finished-at="2024-05-23T15:34:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:06 IST" duration-ms="81" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 30]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/payment/fetch]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "otp": 341617 }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="afterMethod" finished-at="2024-05-23T15:34:06 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="beforeMethod" finished-at="2024-05-23T15:34:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:06 IST" duration-ms="90" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 31]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/delete/item]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "currentPassword": "aathavan1234", "newPassword": "123456", "confirmNewPassword": "123456", "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="afterMethod" finished-at="2024-05-23T15:34:06 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="beforeMethod" finished-at="2024-05-23T15:34:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:06 IST" duration-ms="85" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 32]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/signin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "newPassword" : "1234556" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:06 IST" name="afterMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="beforeMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:07 IST" duration-ms="119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 33]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/signUp]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "sort_id":"Cart#66927c5e-6546-49ee-b07c-df27cc694680" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="afterMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:07 IST" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 34]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/socialSignup/google]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "Monaco watch colors", "item": { "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 1 }, "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="beforeMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="afterMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="beforeMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:07 IST" duration-ms="89" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 35]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/socialSignIn/google]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "transactionId": "MWC-242262572776" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="afterMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="beforeMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:07 IST" duration-ms="123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 36]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/socialSignUp/facebook]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "Monaco watch colors", "item": { "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 1 }, "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="afterMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="beforeMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:07 IST" duration-ms="94" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 37]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/fetch/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="afterMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="beforeMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:07 IST" duration-ms="106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 38]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/info/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01", "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="afterMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:07 IST" duration-ms="74" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 39]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/forgotPassword]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "aathavan@gmail.com", "password": "aathavan12345" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="beforeMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="afterMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="beforeMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:07 IST" duration-ms="74" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 40]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Google Sign Up OAuth Endpoint]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "sample12@gmail.com", "first_name": "John", "last_name": "Doe", "contact_number": "12121212121", "password": "P@ssw0rd", "utmCampaign": "summer_sale", "utmMedium": "email", "utmSource": "newsletter", "utmContent": "banner_ad", "utmTerm": "discount", "emailOpt": true, "smsOpt": false, "referrerId": "", "pointBalance": 100 }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="afterMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="beforeMethod" finished-at="2024-05-23T15:34:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:07 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:08 IST" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 41]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Google Sign In OAuth Endpoint]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="afterMethod" finished-at="2024-05-23T15:34:08 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:08 IST" duration-ms="85" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 42]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/socialSignIn/google]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="beforeMethod" finished-at="2024-05-23T15:34:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="afterMethod" finished-at="2024-05-23T15:34:08 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="beforeMethod" finished-at="2024-05-23T15:34:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:08 IST" duration-ms="72" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 43]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/socialSignUp/facebook]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="afterMethod" finished-at="2024-05-23T15:34:08 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="beforeMethod" finished-at="2024-05-23T15:34:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:08 IST" duration-ms="104" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 44]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/fetch/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="afterMethod" finished-at="2024-05-23T15:34:08 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="beforeMethod" finished-at="2024-05-23T15:34:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:08 IST" duration-ms="89" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 45]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/info/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "contact_number": "12312312312", "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="afterMethod" finished-at="2024-05-23T15:34:08 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="beforeMethod" finished-at="2024-05-23T15:34:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:08 IST" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 46]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/forgotPassword]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "ref1@gmail.com" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="afterMethod" finished-at="2024-05-23T15:34:08 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:08 IST" duration-ms="257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 47]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://accounts.google.com/o/oauth2/v2/auth]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[302.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="beforeMethod" finished-at="2024-05-23T15:34:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="afterMethod" finished-at="2024-05-23T15:34:08 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="beforeMethod" finished-at="2024-05-23T15:34:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:08 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:09 IST" duration-ms="216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 48]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://accounts.google.com/o/oauth2/v2/auth]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[302.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="afterMethod" finished-at="2024-05-23T15:34:09 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:09 IST" duration-ms="185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 49]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://accounts.google.com/o/oauth2/v2/auth]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[302.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="beforeMethod" finished-at="2024-05-23T15:34:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="afterMethod" finished-at="2024-05-23T15:34:09 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="beforeMethod" finished-at="2024-05-23T15:34:09 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:09 IST" duration-ms="84" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 50]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="afterMethod" finished-at="2024-05-23T15:34:09 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:09 IST" duration-ms="87" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 51]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="beforeMethod" finished-at="2024-05-23T15:34:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="afterMethod" finished-at="2024-05-23T15:34:09 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="beforeMethod" finished-at="2024-05-23T15:34:09 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:09 IST" duration-ms="94" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 52]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="afterMethod" finished-at="2024-05-23T15:34:09 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:09 IST" duration-ms="94" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 53]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="beforeMethod" finished-at="2024-05-23T15:34:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="afterMethod" finished-at="2024-05-23T15:34:09 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:09 IST" duration-ms="101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 54]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "raffle_id": "Raffle#687a3b91-a38b-404c-a49d-662104e98be4" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="beforeMethod" finished-at="2024-05-23T15:34:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="afterMethod" finished-at="2024-05-23T15:34:09 IST" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="beforeMethod" finished-at="2024-05-23T15:34:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:09 IST" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 55]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "raffle_id": "Raffle#687a3b91-a38b-404c-a49d-662104e98be4" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="afterMethod" finished-at="2024-05-23T15:34:09 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:10 IST" duration-ms="76" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 56]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:09 IST" name="beforeMethod" finished-at="2024-05-23T15:34:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="afterMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:10 IST" duration-ms="94" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 57]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="beforeMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="afterMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="beforeMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:10 IST" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 58]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "lastDate": 1712206355046 }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="afterMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="beforeMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:10 IST" duration-ms="81" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 59]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "lastDate": " 1712206355046" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="afterMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="beforeMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:10 IST" duration-ms="76" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 60]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="afterMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="beforeMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:10 IST" duration-ms="81" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 61]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="afterMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="beforeMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:10 IST" duration-ms="84" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 62]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="afterMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:10 IST" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 63]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "Monaco watch colors", "item": { "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 30 }, "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="beforeMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="afterMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="beforeMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:10 IST" duration-ms="93" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 64]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="afterMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="beforeMethod" finished-at="2024-05-23T15:34:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:10 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:11 IST" duration-ms="139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 65]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "userId": "User#1dfbc65f-3bf9-419b-8dc1-d65394633bd0", "cartId": "Cart#24d15e1d-24c8-4fb7-84bb-5b3031bb6dd2", "paymentType": "wallet" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="afterMethod" finished-at="2024-05-23T15:34:11 IST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:11 IST" duration-ms="106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 66]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "M watch colors", "item": { "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 2 }, "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="beforeMethod" finished-at="2024-05-23T15:34:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="afterMethod" finished-at="2024-05-23T15:34:11 IST" duration-ms="53" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="beforeMethod" finished-at="2024-05-23T15:34:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:11 IST" duration-ms="103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 67]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "transactionId": "MWC-738804590387" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="afterMethod" finished-at="2024-05-23T15:34:11 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:11 IST" duration-ms="92" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 68]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "test2323@gmail.com", "firstName": "test", "lastName": "12", "contact_number": "+441231231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Monaco watch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="beforeMethod" finished-at="2024-05-23T15:34:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="afterMethod" finished-at="2024-05-23T15:34:11 IST" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="beforeMethod" finished-at="2024-05-23T15:34:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:11 IST" duration-ms="99" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 69]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "otp": 750990 }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="afterMethod" finished-at="2024-05-23T15:34:11 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:11 IST" duration-ms="85" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 70]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="beforeMethod" finished-at="2024-05-23T15:34:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="afterMethod" finished-at="2024-05-23T15:34:11 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:11 IST" duration-ms="110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 71]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "otp": 341617 }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="beforeMethod" finished-at="2024-05-23T15:34:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="afterMethod" finished-at="2024-05-23T15:34:11 IST" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="beforeMethod" finished-at="2024-05-23T15:34:11 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:11 IST" duration-ms="89" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 72]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "currentPassword": "aathavan1234", "newPassword": "{{randomPassword}}", "confirmNewPassword": "{{randomPassword}}", "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:11 IST" name="afterMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="beforeMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:12 IST" duration-ms="86" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 73]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "newPassword" : "{{randomPassword}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="afterMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:12 IST" duration-ms="87" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 74]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[DELETE]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "sort_id":"Cart#66927c5e-6546-49ee-b07c-df27cc694680" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="beforeMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="afterMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:12 IST" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 75]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "test2323@gmail.com", "firstName": "test", "lastName": "12", "contact_number": "+441231231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Monaco watch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="beforeMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="afterMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="beforeMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:12 IST" duration-ms="69" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 76]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "otp": 750990 }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="afterMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="beforeMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:12 IST" duration-ms="69" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 77]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="afterMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="beforeMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:12 IST" duration-ms="72" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 78]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "otp": 341617 }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="afterMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="beforeMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:12 IST" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 79]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "currentPassword": "aathavan1234", "newPassword": "123456", "confirmNewPassword": "123456", "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="afterMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="beforeMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:12 IST" duration-ms="72" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "newPassword" : "1234556" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="afterMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:12 IST" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 81]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[DELETE]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "sort_id":"Cart#66927c5e-6546-49ee-b07c-df27cc694680" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="beforeMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="afterMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="beforeMethod" finished-at="2024-05-23T15:34:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:12 IST" duration-ms="80" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 82]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "Monaco watch colors", "item": { "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 1 }, "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:12 IST" name="afterMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:13 IST" duration-ms="82" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 83]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "transactionId": "MWC-242262572776" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="beforeMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="afterMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:13 IST" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 84]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "Monaco watch colors", "item": { "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 1 }, "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="beforeMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="afterMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="beforeMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:13 IST" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 85]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="afterMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:13 IST" duration-ms="95" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 86]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01", "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="beforeMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="afterMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="beforeMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:13 IST" duration-ms="97" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 87]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "aathavan@gmail.com", "password": "aathavan12345" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="afterMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:13 IST" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 88]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "sample12@gmail.com", "first_name": "John", "last_name": "Doe", "contact_number": "12121212121", "password": "P@ssw0rd", "utmCampaign": "summer_sale", "utmMedium": "email", "utmSource": "newsletter", "utmContent": "banner_ad", "utmTerm": "discount", "emailOpt": true, "smsOpt": false, "referrerId": "", "pointBalance": 100 }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="beforeMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="afterMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="beforeMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:13 IST" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 89]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="afterMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="beforeMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:13 IST" duration-ms="75" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 90]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="afterMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:13 IST" duration-ms="75" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 91]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="beforeMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="afterMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="beforeMethod" finished-at="2024-05-23T15:34:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:13 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:14 IST" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 92]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="afterMethod" finished-at="2024-05-23T15:34:14 IST" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="beforeMethod" finished-at="2024-05-23T15:34:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:14 IST" duration-ms="76" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 93]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "contact_number": "12312312312", "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="afterMethod" finished-at="2024-05-23T15:34:14 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:14 IST" duration-ms="74" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 94]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "ref1@gmail.com" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="beforeMethod" finished-at="2024-05-23T15:34:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="afterMethod" finished-at="2024-05-23T15:34:14 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="beforeMethod" finished-at="2024-05-23T15:34:14 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:14 IST" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 95]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="afterMethod" finished-at="2024-05-23T15:34:14 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:14 IST" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 96]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="beforeMethod" finished-at="2024-05-23T15:34:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="afterMethod" finished-at="2024-05-23T15:34:14 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:14 IST" duration-ms="86" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 97]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/with23Login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="beforeMethod" finished-at="2024-05-23T15:34:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="afterMethod" finished-at="2024-05-23T15:34:14 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="beforeMethod" finished-at="2024-05-23T15:34:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:14 IST" duration-ms="196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 98]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="afterMethod" finished-at="2024-05-23T15:34:14 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="beforeMethod" finished-at="2024-05-23T15:34:14 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:14 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:15 IST" duration-ms="228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 99]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/charity/read/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="afterMethod" finished-at="2024-05-23T15:34:15 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="beforeMethod" finished-at="2024-05-23T15:34:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:15 IST" duration-ms="131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/raffle/read]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="afterMethod" finished-at="2024-05-23T15:34:15 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:15 IST" duration-ms="167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 101]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/raffle/read/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="beforeMethod" finished-at="2024-05-23T15:34:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="afterMethod" finished-at="2024-05-23T15:34:15 IST" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:15 IST" duration-ms="75" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 102]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/raffle/fetch]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="beforeMethod" finished-at="2024-05-23T15:34:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="afterMethod" finished-at="2024-05-23T15:34:15 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:15 IST" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 103]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/raffle/fetch/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="beforeMethod" finished-at="2024-05-23T15:34:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="afterMethod" finished-at="2024-05-23T15:34:15 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:15 IST" duration-ms="122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 104]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/read]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="beforeMethod" finished-at="2024-05-23T15:34:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="afterMethod" finished-at="2024-05-23T15:34:15 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="beforeMethod" finished-at="2024-05-23T15:34:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:15 IST" duration-ms="193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 105]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/read/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="afterMethod" finished-at="2024-05-23T15:34:15 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="beforeMethod" finished-at="2024-05-23T15:34:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:15 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:16 IST" duration-ms="192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 106]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/gallery]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:16 IST" name="afterMethod" finished-at="2024-05-23T15:34:16 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:16 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:16 IST" duration-ms="198" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 107]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/gallery/WithLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:16 IST" name="beforeMethod" finished-at="2024-05-23T15:34:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:16 IST" name="afterMethod" finished-at="2024-05-23T15:34:16 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:16 IST" name="beforeMethod" finished-at="2024-05-23T15:34:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:16 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:16 IST" duration-ms="90" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 108]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/questions/fetch]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:16 IST" name="afterMethod" finished-at="2024-05-23T15:34:16 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:16 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:16 IST" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 109]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/questions/fetch/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:16 IST" name="beforeMethod" finished-at="2024-05-23T15:34:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:16 IST" name="afterMethod" finished-at="2024-05-23T15:34:16 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:16 IST" name="beforeMethod" finished-at="2024-05-23T15:34:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:16 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:17 IST" duration-ms="729" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 110]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/payment/success]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:17 IST" name="afterMethod" finished-at="2024-05-23T15:34:17 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:17 IST" name="beforeMethod" finished-at="2024-05-23T15:34:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:17 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:17 IST" duration-ms="69" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 111]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:17 IST" name="afterMethod" finished-at="2024-05-23T15:34:17 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:17 IST" name="beforeMethod" finished-at="2024-05-23T15:34:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:17 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:17 IST" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 112]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/fetch/user]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:17 IST" name="afterMethod" finished-at="2024-05-23T15:34:17 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:17 IST" name="beforeMethod" finished-at="2024-05-23T15:34:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:17 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:17 IST" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 113]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/payment]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:17 IST" name="afterMethod" finished-at="2024-05-23T15:34:17 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:17 IST" name="beforeMethod" finished-at="2024-05-23T15:34:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:17 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:17 IST" duration-ms="94" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 114]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/update]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[PUT]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:17 IST" name="afterMethod" finished-at="2024-05-23T15:34:17 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:17 IST" name="beforeMethod" finished-at="2024-05-23T15:34:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:17 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:17 IST" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 115]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/payment/success/getTickets]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:17 IST" name="afterMethod" finished-at="2024-05-23T15:34:18 IST" duration-ms="62" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:18 IST" name="beforeMethod" finished-at="2024-05-23T15:34:18 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:18 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:18 IST" duration-ms="116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 116]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/guest/checkout]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:18 IST" name="afterMethod" finished-at="2024-05-23T15:34:18 IST" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:18 IST" name="beforeMethod" finished-at="2024-05-23T15:34:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:18 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:18 IST" duration-ms="116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 117]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/verify/otp]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:18 IST" name="afterMethod" finished-at="2024-05-23T15:34:18 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:18 IST" name="beforeMethod" finished-at="2024-05-23T15:34:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:18 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:19 IST" duration-ms="1265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 118]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/generate/otp]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:19 IST" name="afterMethod" finished-at="2024-05-23T15:34:19 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:19 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:19 IST" duration-ms="75" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 119]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/verify/otp]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:19 IST" name="beforeMethod" finished-at="2024-05-23T15:34:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:19 IST" name="afterMethod" finished-at="2024-05-23T15:34:19 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:19 IST" name="beforeMethod" finished-at="2024-05-23T15:34:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:19 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:19 IST" duration-ms="71" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 120]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/password/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:19 IST" name="afterMethod" finished-at="2024-05-23T15:34:19 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:19 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:19 IST" duration-ms="86" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 121]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/changeOldPassword]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:19 IST" name="beforeMethod" finished-at="2024-05-23T15:34:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:19 IST" name="afterMethod" finished-at="2024-05-23T15:34:19 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:19 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:20 IST" duration-ms="86" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 122]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/delete/expires]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[DELETE]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:19 IST" name="beforeMethod" finished-at="2024-05-23T15:34:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="afterMethod" finished-at="2024-05-23T15:34:20 IST" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="beforeMethod" finished-at="2024-05-23T15:34:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:20 IST" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add/items]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="afterMethod" finished-at="2024-05-23T15:34:20 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:20 IST" duration-ms="82" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 124]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/payment/status/login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="beforeMethod" finished-at="2024-05-23T15:34:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="afterMethod" finished-at="2024-05-23T15:34:20 IST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="beforeMethod" finished-at="2024-05-23T15:34:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:20 IST" duration-ms="112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 125]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cartPayment/add]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="afterMethod" finished-at="2024-05-23T15:34:20 IST" duration-ms="53" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="beforeMethod" finished-at="2024-05-23T15:34:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:20 IST" duration-ms="104" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 126]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/payment/fetch]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="afterMethod" finished-at="2024-05-23T15:34:20 IST" duration-ms="53" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="beforeMethod" finished-at="2024-05-23T15:34:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:20 IST" duration-ms="72" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 127]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/delete/item]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="afterMethod" finished-at="2024-05-23T15:34:20 IST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="beforeMethod" finished-at="2024-05-23T15:34:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:20 IST" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 128]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/signin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="afterMethod" finished-at="2024-05-23T15:34:20 IST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="beforeMethod" finished-at="2024-05-23T15:34:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:20 IST" duration-ms="103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 129]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/signUp]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[DELETE]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:20 IST" name="afterMethod" finished-at="2024-05-23T15:34:21 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="beforeMethod" finished-at="2024-05-23T15:34:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:21 IST" duration-ms="79" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 130]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/socialSignup/google]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="afterMethod" finished-at="2024-05-23T15:34:21 IST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="beforeMethod" finished-at="2024-05-23T15:34:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:21 IST" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 131]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/socialSignIn/google]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="afterMethod" finished-at="2024-05-23T15:34:21 IST" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="beforeMethod" finished-at="2024-05-23T15:34:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:21 IST" duration-ms="92" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 132]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/socialSignUp/facebook]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="afterMethod" finished-at="2024-05-23T15:34:21 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:21 IST" duration-ms="223" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 133]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/fetch/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="beforeMethod" finished-at="2024-05-23T15:34:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="afterMethod" finished-at="2024-05-23T15:34:21 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:21 IST" duration-ms="82" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 134]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/info/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="beforeMethod" finished-at="2024-05-23T15:34:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="afterMethod" finished-at="2024-05-23T15:34:21 IST" duration-ms="44" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="beforeMethod" finished-at="2024-05-23T15:34:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:21 IST" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 135]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/forgotPassword]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="afterMethod" finished-at="2024-05-23T15:34:21 IST" duration-ms="62" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="beforeMethod" finished-at="2024-05-23T15:34:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:21 IST" duration-ms="52" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 136]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Google Sign Up OAuth Endpoint]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="afterMethod" finished-at="2024-05-23T15:34:21 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="beforeMethod" finished-at="2024-05-23T15:34:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:21 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:22 IST" duration-ms="63" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 137]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Google Sign In OAuth Endpoint]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="afterMethod" finished-at="2024-05-23T15:34:22 IST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="beforeMethod" finished-at="2024-05-23T15:34:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:22 IST" duration-ms="84" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 138]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/socialSignIn/google]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="afterMethod" finished-at="2024-05-23T15:34:22 IST" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="beforeMethod" finished-at="2024-05-23T15:34:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:22 IST" duration-ms="74" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 139]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/socialSignUp/facebook]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="afterMethod" finished-at="2024-05-23T15:34:22 IST" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="beforeMethod" finished-at="2024-05-23T15:34:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:22 IST" duration-ms="204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/fetch/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="afterMethod" finished-at="2024-05-23T15:34:22 IST" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:22 IST" duration-ms="76" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 141]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/info/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="beforeMethod" finished-at="2024-05-23T15:34:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="afterMethod" finished-at="2024-05-23T15:34:22 IST" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:22 IST" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 142]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/forgotPassword]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="beforeMethod" finished-at="2024-05-23T15:34:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="afterMethod" finished-at="2024-05-23T15:34:22 IST" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="beforeMethod" finished-at="2024-05-23T15:34:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:22 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:23 IST" duration-ms="695" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 143]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://accounts.google.com/o/oauth2/v2/auth]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:23 IST" name="afterMethod" finished-at="2024-05-23T15:34:23 IST" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:23 IST" name="beforeMethod" finished-at="2024-05-23T15:34:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:23 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:24 IST" duration-ms="679" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 144]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://accounts.google.com/o/oauth2/v2/auth]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:24 IST" name="afterMethod" finished-at="2024-05-23T15:34:24 IST" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:24 IST" name="beforeMethod" finished-at="2024-05-23T15:34:24 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:24 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:25 IST" duration-ms="767" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 145]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[https://accounts.google.com/o/oauth2/v2/auth]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "{{user_id}}" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:25 IST" name="afterMethod" finished-at="2024-05-23T15:34:25 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:25 IST" name="beforeMethod" finished-at="2024-05-23T15:34:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:25 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:25 IST" duration-ms="123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 146]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid raffle id]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/raffle/fetch]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "raffle_id": "Rasadas2312312asdasdhasjqwieuq89237423yhdasdasdasdaczxczxczxczxffle#687a3b91-a38b-404c-a49d-662104e98be4" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:25 IST" name="afterMethod" finished-at="2024-05-23T15:34:25 IST" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:25 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:25 IST" duration-ms="173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 147]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid raffle id]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/raffle/fetch/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "raffle_id": "Rasadas2312312asdasdhasjqwieuq89237423yhdasdasdasdaczxczxczxczxffle#687a3b91-a38b-404c-a49d-662104e98be4" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:25 IST" name="beforeMethod" finished-at="2024-05-23T15:34:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:25 IST" name="afterMethod" finished-at="2024-05-23T15:34:25 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:25 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:25 IST" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 148]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid lastDate]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/gallery]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "lastDate": 171220234234234wer3242346355046 }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:25 IST" name="beforeMethod" finished-at="2024-05-23T15:34:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:25 IST" name="afterMethod" finished-at="2024-05-23T15:34:25 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:25 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:25 IST" duration-ms="391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 149]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  lastDate null]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/gallery]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "lastDate": "" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:25 IST" name="beforeMethod" finished-at="2024-05-23T15:34:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:25 IST" name="afterMethod" finished-at="2024-05-23T15:34:26 IST" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="beforeMethod" finished-at="2024-05-23T15:34:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:26 IST" duration-ms="222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 150]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  lastDate null]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/gallery/WithLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "lastDate": "" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="afterMethod" finished-at="2024-05-23T15:34:26 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:26 IST" duration-ms="184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 151]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid lastDate]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/gallery/WithLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "lastDate": " 1712206asfasda213123dasdad355046" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="beforeMethod" finished-at="2024-05-23T15:34:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="afterMethod" finished-at="2024-05-23T15:34:26 IST" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:26 IST" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 152]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid invalid answer  >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "monaco watch club34", "item": { "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 2 }, "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="beforeMethod" finished-at="2024-05-23T15:34:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="afterMethod" finished-at="2024-05-23T15:34:26 IST" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="beforeMethod" finished-at="2024-05-23T15:34:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:26 IST" duration-ms="72" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 153]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid invalid user id  >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "monaco watch club", "item": { "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 30 }, "user_id": "User#8a638f02-621c-4d59-935af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="afterMethod" finished-at="2024-05-23T15:34:26 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="beforeMethod" finished-at="2024-05-23T15:34:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:26 IST" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 154]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid invalid raffle id >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "monaco watch club", "item": { "raffle_id": "Raffle#46922b2c-812a-702748c8efb1", "ticket_count": 3 }, "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="afterMethod" finished-at="2024-05-23T15:34:26 IST" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="beforeMethod" finished-at="2024-05-23T15:34:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:26 IST" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 155]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid invalid ticket count  >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "monaco watch club", "item": { "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3000000 }, "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="afterMethod" finished-at="2024-05-23T15:34:26 IST" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="beforeMethod" finished-at="2024-05-23T15:34:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:26 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:27 IST" duration-ms="89" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 156]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  null  data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "", "item": { "raffle_id": "", "ticket_count":  }, "user_id": "" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="afterMethod" finished-at="2024-05-23T15:34:27 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="beforeMethod" finished-at="2024-05-23T15:34:27 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:27 IST" duration-ms="69" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 157]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  null  data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/fetch/user]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="afterMethod" finished-at="2024-05-23T15:34:27 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="beforeMethod" finished-at="2024-05-23T15:34:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:27 IST" duration-ms="92" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 158]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid invalid ticket count  >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/fetch/user]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "easdwqeqweqw32q3123123" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="afterMethod" finished-at="2024-05-23T15:34:27 IST" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="beforeMethod" finished-at="2024-05-23T15:34:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:27 IST" duration-ms="91" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 159]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  null  data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/payment]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "userId": "", "cartId": "", "paymentType": "" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="afterMethod" finished-at="2024-05-23T15:34:27 IST" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:27 IST" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 160]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid invalid user id>/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/payment]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "userId": yuuyghbhd0", "cartId": "Cart#24d15e1d-24c8-4fb7-84bb-5b3031bb6dd2", "paymentType": "wallet" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="beforeMethod" finished-at="2024-05-23T15:34:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="afterMethod" finished-at="2024-05-23T15:34:27 IST" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:27 IST" duration-ms="237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 161]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid invalid ticket cartid >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/payment]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "userId": "User#1dfbc65f-3bf9-419b-8dc1-d65394633bd0", "cartId": "jg67gg676fg7676fge56sdgh6dd2", "paymentType": "wallet" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="beforeMethod" finished-at="2024-05-23T15:34:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="afterMethod" finished-at="2024-05-23T15:34:27 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="beforeMethod" finished-at="2024-05-23T15:34:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:27 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:28 IST" duration-ms="253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 162]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid invalid ticket payment >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/payment]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "userId": "User#1dfbc65f-3bf9-419b-8dc1-d65394633bd0", "cartId": "Cart#24d15e1d-24c8-4fb7-84bb-5b3031bb6dd2", "paymentType": "w768fgvb56gvallet" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="afterMethod" finished-at="2024-05-23T15:34:28 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="beforeMethod" finished-at="2024-05-23T15:34:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:28 IST" duration-ms="72" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 163]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid invalid answer  >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/update]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "monaco watch club34", "item": { "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 2 }, "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="afterMethod" finished-at="2024-05-23T15:34:28 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="beforeMethod" finished-at="2024-05-23T15:34:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:28 IST" duration-ms="71" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 164]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid invalid user id  >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/update]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "monaco watch club", "item": { "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 30 }, "user_id": "User#8a638f02-621c-4d59-935af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="afterMethod" finished-at="2024-05-23T15:34:28 IST" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="beforeMethod" finished-at="2024-05-23T15:34:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:28 IST" duration-ms="74" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 165]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid invalid raffle id >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/update]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "monaco watch club", "item": { "raffle_id": "Raffle#46922b2c-812a-702748c8efb1", "ticket_count": 3 }, "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="afterMethod" finished-at="2024-05-23T15:34:28 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:28 IST" duration-ms="75" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 166]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid invalid ticket count  >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/update]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "monaco watch club", "item": { "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3000000 }, "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="beforeMethod" finished-at="2024-05-23T15:34:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="afterMethod" finished-at="2024-05-23T15:34:28 IST" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="beforeMethod" finished-at="2024-05-23T15:34:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:28 IST" duration-ms="88" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 167]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  null  data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/update]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "answer": "", "item": { "raffle_id": "", "ticket_count":  }, "user_id": "" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="afterMethod" finished-at="2024-05-23T15:34:28 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:28 IST" duration-ms="132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 168]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid invalid ticket count  >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/payment/success/getTickets]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "transactionId": "MWC-75756453234re38804590387" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="beforeMethod" finished-at="2024-05-23T15:34:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="afterMethod" finished-at="2024-05-23T15:34:28 IST" duration-ms="60" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="beforeMethod" finished-at="2024-05-23T15:34:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:28 IST" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 169]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  null  data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/payment/success/getTickets]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "transactionId": "" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:28 IST" name="afterMethod" finished-at="2024-05-23T15:34:29 IST" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="beforeMethod" finished-at="2024-05-23T15:34:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:29 IST" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 170]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid answer  >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/guest/checkout]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "test2323@gmail.com", "firstName": "test", "lastName": "12", "contact_number": "+441231231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Mwatch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="afterMethod" finished-at="2024-05-23T15:34:29 IST" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="beforeMethod" finished-at="2024-05-23T15:34:29 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:29 IST" duration-ms="85" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 171]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid email  id  >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/guest/checkout]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "terettretcom", "firstName": "test", "lastName": "12", "contact_number": "+441231231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Monaco watch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="afterMethod" finished-at="2024-05-23T15:34:29 IST" duration-ms="62" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="beforeMethod" finished-at="2024-05-23T15:34:29 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:29 IST" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 172]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid raffle id >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/guest/checkout]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "test2323@gmail.com", "firstName": "test", "lastName": "12", "contact_number": "+441231231212", "items": [{ "raffle_id": "4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Monaco watch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="afterMethod" finished-at="2024-05-23T15:34:29 IST" duration-ms="65" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="beforeMethod" finished-at="2024-05-23T15:34:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:29 IST" duration-ms="79" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 173]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid ticket count  >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/guest/checkout]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "test2323@gmail.com", "firstName": "test", "lastName": "12", "contact_number": "+441231231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 37878787878, "answer": "Monaco watch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="afterMethod" finished-at="2024-05-23T15:34:29 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="beforeMethod" finished-at="2024-05-23T15:34:29 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:29 IST" duration-ms="89" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 174]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  null  data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/guest/checkout]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "", "firstName": "", "lastName": "", "contact_number": "", "items": [{ "raffle_id": "", "ticket_count":, "answer": " }], "paymentType": "", "emailOpt":}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="afterMethod" finished-at="2024-05-23T15:34:29 IST" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="beforeMethod" finished-at="2024-05-23T15:34:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:29 IST" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 175]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid firstname ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/guest/checkout]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "test2323@gmail.com", "firstName": "t78768tyfgfger45rdfgfgfger34t78768tyfgfger45rdfgfgfger34e4rddfdfedddsdasweaestt78768tyfgfger45rdfgfgfger34e4rddfdfedddsdasweaeste4rddfdfedddsdasweaest", "lastName": "12", "contact_number": "+441231231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Monaco watch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="afterMethod" finished-at="2024-05-23T15:34:29 IST" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:29 IST" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 176]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid last name ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/guest/checkout]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "test2323@gmail.com", "firstName": "test", "lastName": "t78768tyfgfger45rdfgfgfger34e4rddfdfedddsdasweaestt78768tyfgfger45rdfgfgfger34e4rddfdfedddsdasweaest", "contact_number": "+441231231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Monaco watch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="beforeMethod" finished-at="2024-05-23T15:34:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="afterMethod" finished-at="2024-05-23T15:34:29 IST" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:30 IST" duration-ms="71" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 177]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid contact no]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/guest/checkout]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "test2323@gmail.com", "firstName": "test", "lastName": "12", "contact_number": "+31231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Monaco watch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:29 IST" name="beforeMethod" finished-at="2024-05-23T15:34:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:30 IST" name="afterMethod" finished-at="2024-05-23T15:34:30 IST" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:30 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:30 IST" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 178]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid payment type]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/guest/checkout]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{ "email": "test2323@gmail.com", "firstName": "test", "lastName": "12", "contact_number": "+441231231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Monaco watch claim" }], "paymentType": "7878yuyuallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:30 IST" name="beforeMethod" finished-at="2024-05-23T15:34:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:30 IST" name="afterMethod" finished-at="2024-05-23T15:34:30 IST" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:30 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:30 IST" duration-ms="199" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 179]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid OTP]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/verify/otp]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "otp": 750990 }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:30 IST" name="beforeMethod" finished-at="2024-05-23T15:34:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:30 IST" name="afterMethod" finished-at="2024-05-23T15:34:30 IST" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:30 IST" name="beforeMethod" finished-at="2024-05-23T15:34:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:30 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:30 IST" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 180]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  null  data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/verify/otp]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "otp": "" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:30 IST" name="afterMethod" finished-at="2024-05-23T15:34:30 IST" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:30 IST" name="beforeMethod" finished-at="2024-05-23T15:34:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:30 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:31 IST" duration-ms="1079" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 181]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  incorrect old password ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/password/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "currentPassword": "aathavan1234", "newPassword": "123456", "confirmNewPassword": "123456", "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:31 IST" name="afterMethod" finished-at="2024-05-23T15:34:31 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:31 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:32 IST" duration-ms="1109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 182]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  incorrect new password ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/password/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "currentPassword": "aathavan1234", "newPassword": "1336", "confirmNewPassword": "123456", "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:31 IST" name="beforeMethod" finished-at="2024-05-23T15:34:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:32 IST" name="afterMethod" finished-at="2024-05-23T15:34:32 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:32 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:32 IST" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 183]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  incorrect confirm password ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/password/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "currentPassword": "aathavan1234", "newPassword": "123456", "confirmNewPassword": "1234", "user_id": "User#8a638f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:32 IST" name="beforeMethod" finished-at="2024-05-23T15:34:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:32 IST" name="afterMethod" finished-at="2024-05-23T15:34:33 IST" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:33 IST" name="beforeMethod" finished-at="2024-05-23T15:34:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:33 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:34 IST" duration-ms="1096" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 184]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  incorrect userid]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/password/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "currentPassword": "aathavan1234", "newPassword": "123456", "confirmNewPassword": "123456", "user_id": "User#8a638f02-621c-4035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="afterMethod" finished-at="2024-05-23T15:34:34 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:34 IST" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 185]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  null  data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/password/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "currentPassword": "", "newPassword": "", "confirmNewPassword": "", "user_id": "" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="beforeMethod" finished-at="2024-05-23T15:34:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="afterMethod" finished-at="2024-05-23T15:34:34 IST" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="beforeMethod" finished-at="2024-05-23T15:34:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:34 IST" duration-ms="95" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 186]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  null  data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/changeOldPassword]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "newPassword" : "" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="afterMethod" finished-at="2024-05-23T15:34:34 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:34 IST" duration-ms="101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 187]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  incorrect  password]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/changeOldPassword]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "newPassword" : "1234" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="beforeMethod" finished-at="2024-05-23T15:34:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="afterMethod" finished-at="2024-05-23T15:34:34 IST" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="beforeMethod" finished-at="2024-05-23T15:34:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:34 IST" duration-ms="79" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 188]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  null  data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/delete/expires]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[DELETE]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "sort_id":"" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="afterMethod" finished-at="2024-05-23T15:34:34 IST" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="beforeMethod" finished-at="2024-05-23T15:34:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:34 IST" duration-ms="111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 189]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  incorrect  password]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/delete/expires]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[DELETE]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "sort_id":"Care-6546-49ee-b07c-df27cc694680" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="afterMethod" finished-at="2024-05-23T15:34:34 IST" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="beforeMethod" finished-at="2024-05-23T15:34:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:34 IST" duration-ms="86" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 190]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid answer  >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add/items]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "test2323@gmail.com", "firstName": "test", "lastName": "12", "contact_number": "+441231231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Mwatch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:34 IST" name="afterMethod" finished-at="2024-05-23T15:34:35 IST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="beforeMethod" finished-at="2024-05-23T15:34:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:35 IST" duration-ms="99" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 191]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid email  id  >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add/items]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "terettretcom", "firstName": "test", "lastName": "12", "contact_number": "+441231231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Monaco watch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="afterMethod" finished-at="2024-05-23T15:34:35 IST" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:35 IST" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 192]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid raffle id >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add/items]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "test2323@gmail.com", "firstName": "test", "lastName": "12", "contact_number": "+441231231212", "items": [{ "raffle_id": "4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Monaco watch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="beforeMethod" finished-at="2024-05-23T15:34:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="afterMethod" finished-at="2024-05-23T15:34:35 IST" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="beforeMethod" finished-at="2024-05-23T15:34:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:35 IST" duration-ms="110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 193]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid ticket count  >/cart/add]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add/items]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "test2323@gmail.com", "firstName": "test", "lastName": "12", "contact_number": "+441231231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 37878787878, "answer": "Monaco watch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="afterMethod" finished-at="2024-05-23T15:34:35 IST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="beforeMethod" finished-at="2024-05-23T15:34:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:35 IST" duration-ms="103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 194]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  null  data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add/items]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "", "firstName": "", "lastName": "", "contact_number": "", "items": [{ "raffle_id": "", "ticket_count":, "answer": " }], "paymentType": "", "emailOpt":}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="afterMethod" finished-at="2024-05-23T15:34:35 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:35 IST" duration-ms="106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 195]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid firstname ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add/items]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "test2323@gmail.com", "firstName": "t78768tyfgfger45rdfgfgfger34t78768tyfgfger45rdfgfgfger34e4rddfdfedddsdasweaestt78768tyfgfger45rdfgfgfger34e4rddfdfedddsdasweaeste4rddfdfedddsdasweaest", "lastName": "12", "contact_number": "+441231231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Monaco watch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="beforeMethod" finished-at="2024-05-23T15:34:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="afterMethod" finished-at="2024-05-23T15:34:35 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="beforeMethod" finished-at="2024-05-23T15:34:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:35 IST" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 196]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid last name ]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add/items]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "test2323@gmail.com", "firstName": "test", "lastName": "t78768tyfgfger45rdfgfgfger34e4rddfdfedddsdasweaestt78768tyfgfger45rdfgfgfger34e4rddfdfedddsdasweaest", "contact_number": "+441231231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Monaco watch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="afterMethod" finished-at="2024-05-23T15:34:35 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="beforeMethod" finished-at="2024-05-23T15:34:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:35 IST" duration-ms="79" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 197]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid contact no]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add/items]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "email": "test2323@gmail.com", "firstName": "test", "lastName": "12", "contact_number": "+31231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Monaco watch claim" }], "paymentType": "wallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="afterMethod" finished-at="2024-05-23T15:34:35 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="beforeMethod" finished-at="2024-05-23T15:34:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:35 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:36 IST" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 198]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid payment type]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/add/items]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{ "email": "test2323@gmail.com", "firstName": "test", "lastName": "12", "contact_number": "+441231231212", "items": [{ "raffle_id": "Raffle#46922b23-e2b6-4c3c-812a-702748c8efb1", "ticket_count": 3, "answer": "Monaco watch claim" }], "paymentType": "7878yuyuallet", "emailOpt": true }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="afterMethod" finished-at="2024-05-23T15:34:36 IST" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:36 IST" duration-ms="101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 199]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  null  data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/payment/status/login]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "transactionId":""
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="beforeMethod" finished-at="2024-05-23T15:34:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="afterMethod" finished-at="2024-05-23T15:34:36 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:36 IST" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 200]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid user id]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/delete/item]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{   "user_id":"eqeqwe23231232",
    "raffle_id": "{{raffle_id}}"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="beforeMethod" finished-at="2024-05-23T15:34:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="afterMethod" finished-at="2024-05-23T15:34:36 IST" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="beforeMethod" finished-at="2024-05-23T15:34:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:36 IST" duration-ms="84" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 201]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid raffle id]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/delete/item]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{   "user_id":" User#8a638f02-621c-4d59-9457-4c889035af01",
    "raffle_id": "futr3452352"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="afterMethod" finished-at="2024-05-23T15:34:36 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="beforeMethod" finished-at="2024-05-23T15:34:36 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:36 IST" duration-ms="74" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 202]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving null data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/cart/delete/item]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{   "user_id":" ",
    "raffle_id": ""
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="afterMethod" finished-at="2024-05-23T15:34:36 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="beforeMethod" finished-at="2024-05-23T15:34:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:36 IST" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 203]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid email]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/signin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "email":"ref2@gwerw",
    "password":"123456"
   
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="afterMethod" finished-at="2024-05-23T15:34:36 IST" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:36 IST" duration-ms="118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 204]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid email (destn't exist user)]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/signin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "email":"ref2@gwerwerwmail.com",
    "password":"123456"
   
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="beforeMethod" finished-at="2024-05-23T15:34:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="afterMethod" finished-at="2024-05-23T15:34:36 IST" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:36 IST" duration-ms="69" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 205]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  null data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/signin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "email":"",
    "password":""
   
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="beforeMethod" finished-at="2024-05-23T15:34:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="afterMethod" finished-at="2024-05-23T15:34:36 IST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:37 IST" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 206]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid phone number]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/signin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
 "email": "dd@gmail.com",
    "first_name": "John",
    "last_name": "Doe",
    "contact_number": "+442345678908765435678908765435678987654678",
    "password": "P@ssw0rd",
    "utmCampaign": "summer_sale",
    "utmMedium": "email",
    "utmSource": "news",
    "utmContent": "band",
    "utmTerm": "discount",
    "emailOpt": true,
    "smsOpt": false,
    "referrerId": "",
   "pointBalance":0
   
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:36 IST" name="beforeMethod" finished-at="2024-05-23T15:34:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="afterMethod" finished-at="2024-05-23T15:34:37 IST" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:37 IST" duration-ms="69" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 207]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  null data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/signin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
 "email": "",
    "first_name": "",
    "last_name": "",
    "contact_number": "",
    "password": "",
    "utmCampaign": "",
    "utmMedium": "",
    "utmSource": "",
    "utmContent": "",
    "utmTerm": "",
    "emailOpt":,
    "smsOpt": ,
    "referrerId": "",
   "pointBalance":
   
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="beforeMethod" finished-at="2024-05-23T15:34:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="afterMethod" finished-at="2024-05-23T15:34:37 IST" duration-ms="53" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="beforeMethod" finished-at="2024-05-23T15:34:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:37 IST" duration-ms="82" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 208]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving existing email]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/signin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
 "email": "ref@gmail.com",
    "first_name": "John",
    "last_name": "Doe",
    "contact_number": "+443495675453",
    "password": "P@ssw0rd",
    "utmCampaign": "summer_sale",
    "utmMedium": "email",
    "utmSource": "news",
    "utmContent": "band",
    "utmTerm": "discount",
    "emailOpt": true,
    "smsOpt": false,
    "referrerId": "",
   "pointBalance":0
   
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="afterMethod" finished-at="2024-05-23T15:34:37 IST" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="beforeMethod" finished-at="2024-05-23T15:34:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:37 IST" duration-ms="82" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 209]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving exsting phone number]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/auth/signin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
 "email": "ref56@gmail.com",
    "first_name": "John",
    "last_name": "Doe",
    "contact_number": "+443495675453",
    "password": "P@ssw0rd",
    "utmCampaign": "summer_sale",
    "utmMedium": "email",
    "utmSource": "news",
    "utmContent": "band",
    "utmTerm": "discount",
    "emailOpt": true,
    "smsOpt": false,
    "referrerId": "",
   "pointBalance":0
   
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="afterMethod" finished-at="2024-05-23T15:34:37 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="beforeMethod" finished-at="2024-05-23T15:34:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:37 IST" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 210]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving  null data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/info/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
   "contact_number":"","user_id":""
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="afterMethod" finished-at="2024-05-23T15:34:37 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="beforeMethod" finished-at="2024-05-23T15:34:37 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:37 IST" duration-ms="103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 211]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving exsting phone number]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/info/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
   "contact_number":"+918197853252","user_id":" User#8a638f02-621c-4d59-9457-4c889035af01"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="afterMethod" finished-at="2024-05-23T15:34:37 IST" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="beforeMethod" finished-at="2024-05-23T15:34:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:37 IST" duration-ms="84" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 212]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid user id]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/info/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
   "contact_number":"+918197853252","user_id":" -9457-4c889035af01"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="afterMethod" finished-at="2024-05-23T15:34:37 IST" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="beforeMethod" finished-at="2024-05-23T15:34:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:37 IST" duration-ms="72" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 213]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving non exsting email]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/info/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "email": "ref156565656@gmail.com"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:37 IST" name="afterMethod" finished-at="2024-05-23T15:34:38 IST" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="beforeMethod" finished-at="2024-05-23T15:34:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:38 IST" duration-ms="81" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 214]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving null data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/update/info/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "email": ""
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="afterMethod" finished-at="2024-05-23T15:34:38 IST" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:38 IST" duration-ms="264" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 215]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving invalid user id]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/fetch/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "User#8a6ccsas38f02-621c-4d59-9457-4c889035af01" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[200.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="beforeMethod" finished-at="2024-05-23T15:34:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="afterMethod" finished-at="2024-05-23T15:34:38 IST" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="beforeMethod" finished-at="2024-05-23T15:34:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:38 IST" duration-ms="69" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 216]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[validating the api's by giving null data]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/accounts/fetch/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ { "user_id": "" }]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="afterMethod" finished-at="2024-05-23T15:34:38 IST" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:38 IST" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 217]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api by giving invalid  last date]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/read]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "lastDate": "0000000"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="beforeMethod" finished-at="2024-05-23T15:34:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="afterMethod" finished-at="2024-05-23T15:34:38 IST" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="beforeMethod" finished-at="2024-05-23T15:34:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:38 IST" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 218]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/Fetch]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "sort_id" : "Winner#0367896f-352b-49ff-8d01-2b5ef75459a7"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="afterMethod" finished-at="2024-05-23T15:34:38 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="beforeMethod" finished-at="2024-05-23T15:34:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:38 IST" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 219]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/Read/WitLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "lastDate": ""
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="afterMethod" finished-at="2024-05-23T15:34:38 IST" duration-ms="55" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:39 IST" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 220]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/fetchithLogin ]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "slug" : "slug1"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:38 IST" name="beforeMethod" finished-at="2024-05-23T15:34:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="afterMethod" finished-at="2024-05-23T15:34:39 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="beforeMethod" finished-at="2024-05-23T15:34:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:39 IST" duration-ms="79" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 221]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  end points]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/fetch/WithLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "sort_id" : "Winner#0367896f-352b-49ff-8d01-2b5ef75459a7"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="afterMethod" finished-at="2024-05-23T15:34:39 IST" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="beforeMethod" finished-at="2024-05-23T15:34:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:39 IST" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 222]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/read]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "lastDate": ""
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="afterMethod" finished-at="2024-05-23T15:34:39 IST" duration-ms="57" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="beforeMethod" finished-at="2024-05-23T15:34:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:39 IST" duration-ms="101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 223]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/fetch]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "sort_id" : "Winner#0367896f-352b-49ff-8d01-2b5ef75459a7"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="afterMethod" finished-at="2024-05-23T15:34:39 IST" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:39 IST" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 224]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/read/withLogin ]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "lastDate": ""
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="beforeMethod" finished-at="2024-05-23T15:34:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="afterMethod" finished-at="2024-05-23T15:34:39 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="beforeMethod" finished-at="2024-05-23T15:34:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:39 IST" duration-ms="57" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 225]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/fetch/withLogin ]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "slug" : "slug1"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="afterMethod" finished-at="2024-05-23T15:34:39 IST" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:39 IST" duration-ms="72" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 226]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid  method]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/fetch/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "sort_id" : "Winner#0367896f-352b-49ff-8d01-2b5ef75459a7"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="beforeMethod" finished-at="2024-05-23T15:34:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="afterMethod" finished-at="2024-05-23T15:34:39 IST" duration-ms="62" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:39 IST" duration-ms="59" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 227]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving without payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/read]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
   
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="beforeMethod" finished-at="2024-05-23T15:34:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="afterMethod" finished-at="2024-05-23T15:34:39 IST" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:39 IST" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 228]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving without payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/fetch]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
   
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="beforeMethod" finished-at="2024-05-23T15:34:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:39 IST" name="afterMethod" finished-at="2024-05-23T15:34:40 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="beforeMethod" finished-at="2024-05-23T15:34:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:40 IST" duration-ms="63" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 229]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving without payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/read/withLogin ]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
   
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="afterMethod" finished-at="2024-05-23T15:34:40 IST" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="beforeMethod" finished-at="2024-05-23T15:34:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:40 IST" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 230]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving without payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/fetch/withLogin ]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
   
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="afterMethod" finished-at="2024-05-23T15:34:40 IST" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="beforeMethod" finished-at="2024-05-23T15:34:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:40 IST" duration-ms="71" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 231]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving without payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/fetch/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
   
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="afterMethod" finished-at="2024-05-23T15:34:40 IST" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="beforeMethod" finished-at="2024-05-23T15:34:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:40 IST" duration-ms="65" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 232]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/read]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "lastDate": 
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="afterMethod" finished-at="2024-05-23T15:34:40 IST" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:40 IST" duration-ms="69" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 233]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/fetch]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "sort_id" : ner#0367896f-352b-49ff-8d01-2b5ef75459a7"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[400.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="beforeMethod" finished-at="2024-05-23T15:34:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="afterMethod" finished-at="2024-05-23T15:34:40 IST" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:40 IST" duration-ms="74" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 234]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/read/withLogin ]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "lastDate": "
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="beforeMethod" finished-at="2024-05-23T15:34:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="afterMethod" finished-at="2024-05-23T15:34:40 IST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:40 IST" duration-ms="56" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 235]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/fetch/withLogin ]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "slug" : "sl
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="beforeMethod" finished-at="2024-05-23T15:34:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="afterMethod" finished-at="2024-05-23T15:34:40 IST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="beforeMethod" finished-at="2024-05-23T15:34:40 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:40 IST" duration-ms="71" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 236]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api's by giving invalid payload]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/fetch/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "sort_id" : "Winner#-8d01-2b5ef75459a7"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:40 IST" name="afterMethod" finished-at="2024-05-23T15:34:41 IST" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="beforeMethod" finished-at="2024-05-23T15:34:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:41 IST" duration-ms="60" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 237]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api by giving null last date]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/read]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "lastDate": ""
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="afterMethod" finished-at="2024-05-23T15:34:41 IST" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:41 IST" duration-ms="66" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 238]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api by giving null sort id]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/fetch]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "sort_id" : "Winner#0367896f-352b-49ff-8d01-2b5ef75459a7"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="beforeMethod" finished-at="2024-05-23T15:34:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="afterMethod" finished-at="2024-05-23T15:34:41 IST" duration-ms="57" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="beforeMethod" finished-at="2024-05-23T15:34:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:41 IST" duration-ms="52" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 239]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api by giving null last date]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/read/withLogin ]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "lastDate": ""
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="afterMethod" finished-at="2024-05-23T15:34:41 IST" duration-ms="62" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:41 IST" duration-ms="52" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 240]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api by giving null slug]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/fetch/withLogin ]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "slug" : "slug1"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="beforeMethod" finished-at="2024-05-23T15:34:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="afterMethod" finished-at="2024-05-23T15:34:41 IST" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="beforeMethod" finished-at="2024-05-23T15:34:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:41 IST" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 241]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api by giving null sort id]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/fetch/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "sort_id" : "Winner#0367896f-352b-49ff-8d01-2b5ef75459a7"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="afterMethod" finished-at="2024-05-23T15:34:41 IST" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="beforeMethod" finished-at="2024-05-23T15:34:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:41 IST" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 242]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api by giving invalid last date]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/read]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "lastDate": "23412eqweqwe03242390"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="afterMethod" finished-at="2024-05-23T15:34:41 IST" duration-ms="53" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="beforeMethod" finished-at="2024-05-23T15:34:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:41 IST" duration-ms="73" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 243]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api by giving invalid  sort id]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/fetch]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "sort_id" : "Wi32432423423weqw))9ff-8d01-2b5ef75459a7"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="afterMethod" finished-at="2024-05-23T15:34:41 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="beforeMethod" finished-at="2024-05-23T15:34:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:41 IST" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 244]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api by giving invalid  last date]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/read/withLogin ]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "lastDate": "@!#!@qweqwe2312"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:41 IST" name="afterMethod" finished-at="2024-05-23T15:34:42 IST" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:42 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:42 IST" duration-ms="50" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 245]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api by giving invalid slug]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/news/fetch/withLogin ]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "slug" : "213@!#12qweqw"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[403.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:42 IST" name="beforeMethod" finished-at="2024-05-23T15:34:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:42 IST" name="afterMethod" finished-at="2024-05-23T15:34:42 IST" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:42 IST" name="beforeMethod" finished-at="2024-05-23T15:34:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MWCRestApiFuntValidations(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,java.lang.String)[pri:2, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:42 IST" name="MWCRestApiFuntValidations" data-provider="MWCData" finished-at="2024-05-23T15:34:42 IST" duration-ms="85" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[row 246]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Validate the api by giving invalid  sort id]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[/winners/fetch/withLogin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{
    "sort_id" : "3123213))#!@#!@49ff-8d01-2b5ef75459a7"
}]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[404.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MWCRestApiFuntValidations -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:42 IST" name="afterMethod" finished-at="2024-05-23T15:34:42 IST" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.MonacoTesting.MonacoTestClass@4b0d79fc]" started-at="2024-05-23T15:34:42 IST" name="tearDown" finished-at="2024-05-23T15:34:42 IST" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.MonacoTesting.MonacoTestClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
